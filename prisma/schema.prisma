// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int      @id @default(autoincrement())
  slug        String   @unique
  title       String   @unique
  description String
  body        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()

  authorId Int
  author   User @relation("User_Author_Articles", fields: [authorId], references: [id], onDelete: Cascade)

  favoritedBy User[] @relation("Users_Favorite_Articles")

  tagList Tag[] @relation("Articles_Have_Tags")

  comments Comment[] @relation("Article_Have_Comments")

  @@map("articles")
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body      String

  authorId Int
  author   User @relation("User_Have_Comments", fields: [authorId], references: [id], onDelete: Cascade)

  articleId Int
  article   Article @relation("Article_Have_Comments", fields: [articleId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  articles Article[] @relation("Articles_Have_Tags")

  @@map("tags")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String   @unique
  password  String
  image     String?  @default("")
  bio       String?  @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  favorites Article[] @relation("Users_Favorite_Articles")

  articles Article[] @relation("User_Author_Articles")

  followings User[] @relation("Users_Follow_Users")
  followers  User[] @relation("Users_Follow_Users")

  comments Comment[] @relation("User_Have_Comments")

  @@map("users")
}
