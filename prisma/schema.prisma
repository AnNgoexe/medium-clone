// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int       @id @default(autoincrement())
  slug        String    @unique
  title       String    @unique
  description String
  body        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()

  authorId    Int
  author      User      @relation("UserArticles", fields: [authorId], references: [id], onDelete: Cascade)

  favoritedBy User[]    @relation("UserFavorites")

  tagList     Tag[]     @relation("ArticleTags")

  @@map("articles")
}

model Tag {
  id          Int       @id @default(autoincrement())
  name        String    @unique

  articles    Article[] @relation("ArticleTags")

  @@map("tags")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  username    String    @unique
  password    String
  image       String?   @default("")
  bio         String?   @default("")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()

  favorites   Article[] @relation("UserFavorites")

  articles    Article[] @relation("UserArticles")

  following   User[]    @relation("FollowRelation")
  followers   User[]    @relation("FollowRelation")

  @@map("users")
}
